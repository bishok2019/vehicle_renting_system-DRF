# Generated by Django 5.1.6 on 2025-03-04 09:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SluggedModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('sluggedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vehicle.sluggedmodel')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'abstract': False,
            },
            bases=('vehicle.sluggedmodel',),
        ),
        migrations.CreateModel(
            name='FuelType',
            fields=[
                ('sluggedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vehicle.sluggedmodel')),
            ],
            options={
                'abstract': False,
            },
            bases=('vehicle.sluggedmodel',),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('sluggedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vehicle.sluggedmodel')),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Locations',
                'abstract': False,
            },
            bases=('vehicle.sluggedmodel',),
        ),
        migrations.CreateModel(
            name='TransmissionType',
            fields=[
                ('sluggedmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vehicle.sluggedmodel')),
            ],
            options={
                'abstract': False,
            },
            bases=('vehicle.sluggedmodel',),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('registration_number', models.CharField(max_length=20, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('seating_capacity', models.PositiveIntegerField()),
                ('color', models.CharField(max_length=50)),
                ('mileage', models.PositiveIntegerField()),
                ('is_available', models.BooleanField(db_index=True, default=True)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('fuel_efficiency', models.DecimalField(blank=True, decimal_places=2, help_text='Fuel efficiency in km/l or mpg', max_digits=5, null=True)),
                ('features', models.TextField(blank=True, help_text='Comma-separated list of special features')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_category', to='vehicle.category')),
                ('fuel_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles_fuel_type', to='vehicle.fueltype')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles_location', to='vehicle.location')),
                ('transmission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles_transmission', to='vehicle.transmissiontype')),
            ],
            options={
                'verbose_name_plural': 'Vehicles',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['make', 'model'], name='vehicle_veh_make_bf4eff_idx'), models.Index(fields=['is_available'], name='vehicle_veh_is_avai_8a2630_idx'), models.Index(fields=['registration_number'], name='vehicle_veh_registr_5efd21_idx')],
            },
        ),
    ]
